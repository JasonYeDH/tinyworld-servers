# Set root logger level to DEBUG and its only appender to A1.
log4j.rootLogger=DEBUG, A1, R

# log4j.logger.com.foo=WARN
log4j.logger.X.Y=TRACE

#
# 控制台输出
#
log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%d [%c] %5p - %m%n
#log4j.appender.A1.encoding=utf-8

#
# 文件输出
#
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=example.log
log4j.appender.R.MaxFileSize=100KB
log4j.appender.R.MaxBackupIndex=10
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%d [%c] %5p - %m%n
#log4j.appender.R.encoding=UTF-8



#
# 按时间文件输出
#
log4j.logger.feature2=DEBUG, F2
# feature2's appender is not inherited from root 
log4j.additivity.feature2=false
log4j.appender.F2=org.apache.log4j.DailyRollingFileAppender
log4j.appender.F2.file=feature2.log
log4j.appender.F2.datePattern='.'yyyyMMdd-HH
log4j.appender.F2.Append=yes
log4j.appender.F2.layout=org.apache.log4j.PatternLayout
log4j.appender.F2.layout.ConversionPattern=%d [%t] %-5p %c - %m%n


#
# PatternLayout的格式控制符:
#
# %m 输出代码中指定的消息
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL
# %r 输出自应用启动到输出该log信息耗费的毫秒数
# %c 输出所属的类目，通常就是所在类的全名
# %t 输出产生该日志事件的线程名
# %n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n”
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出2008年11月14日 15:16:17,890
# %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。
# %F 输出日志事件所在的文件名
# #L 输出日志事件所在的文件行数